services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    env_file:
      - .env
    # NOTE: POSTGRES_USER, POSTGRES_PASSWORD, and POSTGRES_DB should be in your .env file
    environment:
      - POSTGRES_HOST_AUTH_METHOD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped
    networks:
      - flight-network

  airflow:
    build:
      context: .
      dockerfile: ./airflow/Dockerfile
    container_name: airflow-w-pg
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - PYTHONPATH=/opt/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/src:/opt/airflow/src
    ports:
      - "9099:9099" # Port for Airflow Webserver
      - "8793:8793" # Port for Airflow Celery Flower
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9099/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - flight-network
  
  spark-master:
    build:
      context: .
      dockerfile: ./spark/Dockerfile
    container_name: spark-master
    # command: master
    env_file:
      - .env
    environment:
      - SPARK_MODE=master
    ports:
      - "8080:8080" # Spark Master Web UI
      - "7077:7077" # Spark Master RPC
      - "4040:4040" # Spark application UI
    volumes:
      - ./apps:/opt/spark-apps
      - ./data:/opt/spark-data
    networks:
      - flight-network

  spark-worker-1:
    build:
      context: .
      dockerfile: ./spark/Dockerfile
    container_name: spark-worker-1
    # command: worker spark://spark-master:7077
    env_file:
      - .env
    environment:
      - SPARK_WORKER_MEMORY=2000m
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8081:8081" # Spark Worker Web UI
    depends_on:
      - spark-master
    networks:
      - flight-network

  spark-worker-2:
    build:
      context: .
      dockerfile: ./spark/Dockerfile
    container_name: spark-worker-2
    # command: worker spark://spark-master:7077
    env_file:
      - .env
    environment:
      - SPARK_WORKER_MEMORY=2000m
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8082:8082" # Spark Worker Web UI
    depends_on:
      - spark-master
    networks:
      - flight-network

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: F:/docker-images/volumes/pg_data
  airflow_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: F:/docker-images/volumes/airflow_logs

networks:
  flight-network:
    driver: bridge
