services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_HOST_AUTH_METHOD=password
      - PGDATA=/var/lib/postgresql/pgdata
    # - POSTGRES_USER=root
    # - POSTGRES_PASSWORD=root_password #this will override
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data # Changed this not able to make this persistant
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped
    networks:
      - flight-network


  # use this to connect to the postgres using console.
  # docker exec -it postgres psql -U airflow_user -d flight_db

  airflow:
    build:
      # context: ./airflow
      dockerfile: ./airflow/Dockerfile
    container_name: airflow-w-pg
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - PYTHONPATH=/opt/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/src:/opt/airflow/src
    ports:
      - "9099:9099"
      - "8793:8793"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9099/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - flight-network


volumes:
  # postgres_data:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: F:/docker-images/volumes/pg_data
  airflow_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: F:/docker-images/volumes/airflow_logs


networks:
  flight-network:
    driver: bridge
